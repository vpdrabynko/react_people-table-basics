{"version":3,"sources":["components/Navigation/PageNavLink.tsx","components/Navigation/Navbar.tsx","App.tsx","components/Pages/HomePage.tsx","components/Loader/Loader.tsx","api.ts","components/PeopleInfo/PersonLink.tsx","components/PeopleInfo/PersonInfo.tsx","components/PeopleInfo/PeopleTable.tsx","components/Pages/PeoplePage.tsx","components/Pages/NotFoundPage.tsx","Root.tsx","index.tsx"],"names":["PageNavLink","to","content","className","isActive","cn","Navbar","role","App","HomePage","Loader","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PersonLink","person","slug","name","sex","PersonInfo","isSelected","people","motherName","fatherName","died","born","motherFound","find","p","motherNameCell","fatherFound","fatherNameCell","PeopleTable","selectedSlug","map","PeoplePage","useState","setPeople","isError","setIsError","isLoading","setIsLoading","useParams","peopleData","useEffect","fetchPeople","dataFromServer","length","NotFoundPage","Root","path","element","index","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.9e8670bd.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport cn from 'classnames';\n\ntype Props = {\n  to: string;\n  content: string;\n};\n\nexport const PageNavLink: React.FC<Props> = ({ to, content }) => {\n  return (\n    <NavLink\n      to={to}\n      className={({ isActive }) => cn(\n        'navbar-item',\n        { 'has-background-grey-lighter': isActive },\n      )}\n    >\n      {content}\n    </NavLink>\n  );\n};\n","import { PageNavLink } from './PageNavLink';\n\nexport const Navbar = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <PageNavLink to=\"/\" content=\"Home\" />\n          <PageNavLink to=\"/people\" content=\"People\" />\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import { Outlet } from 'react-router-dom';\nimport './App.scss';\nimport { Navbar } from './components/Navigation/Navbar';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <Navbar />\n    <main className=\"section\">\n      <div className=\"container\">\n        <Outlet />\n      </div>\n    </main>\n  </div>\n);\n","export const HomePage = () => {\n  return <h1 className=\"title\">Home Page</h1>;\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import React from 'react';\nimport cn from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person;\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  const {\n    slug,\n    name,\n    sex,\n  } = person;\n\n  return (\n    <NavLink\n      to={`/people/${slug}`}\n      className={cn({ 'has-text-danger': sex === 'f' })}\n    >\n      {name}\n    </NavLink>\n  );\n};\n","import React from 'react';\nimport cn from 'classnames';\nimport { Person } from '../../types';\nimport { PersonLink } from './PersonLink';\n\ntype Props = {\n  person: Person;\n  isSelected: (person: Person) => boolean;\n  people: Person[];\n};\n\nexport const PersonInfo: React.FC<Props> = ({\n  person,\n  isSelected,\n  people,\n}) => {\n  const {\n    motherName,\n    fatherName,\n    sex,\n    died,\n    born,\n  } = person;\n\n  const motherFound = people.find(p => p.name === motherName);\n  const motherNameCell = motherName || '-';\n  const fatherFound = people.find(p => p.name === fatherName);\n  const fatherNameCell = fatherName || '-';\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={cn({ 'has-background-warning': isSelected(person) })}\n    >\n      <td>\n        <PersonLink person={person} />\n      </td>\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n      <td>\n        {motherFound\n          ? <PersonLink person={motherFound} />\n          : motherNameCell}\n      </td>\n      <td>\n        {fatherFound\n          ? <PersonLink person={fatherFound} />\n          : fatherNameCell}\n      </td>\n    </tr>\n  );\n};\n","import React from 'react';\nimport { Person } from '../../types';\nimport { PersonInfo } from './PersonInfo';\n\ntype Props = {\n  people: Person[];\n  selectedSlug: string;\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people, selectedSlug }) => {\n  const isSelected = (person: Person) => person.slug === selectedSlug;\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => (\n          <PersonInfo\n            people={people}\n            person={person}\n            key={person.name}\n            isSelected={isSelected}\n          />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Loader } from '../Loader';\nimport { Person } from '../../types';\nimport { getPeople } from '../../api';\nimport { PeopleTable } from '../PeopleInfo/PeopleTable';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isError, setIsError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const { slug = '' } = useParams();\n\n  async function fetchPeople() {\n    setIsError(false);\n\n    try {\n      setIsLoading(true);\n      const peopleData = await getPeople();\n\n      setPeople(peopleData);\n      setIsLoading(false);\n    } catch {\n      setIsError(true);\n    } finally {\n      setIsLoading(false);\n    }\n  }\n\n  useEffect(() => {\n    fetchPeople();\n  }, []);\n\n  const dataFromServer = (people.length > 0)\n    ? <PeopleTable people={people} selectedSlug={slug} />\n    : (\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          <p data-cy=\"noPeopleMessage\">\n            There are no people on the server\n          </p>\n        </div>\n      </div>\n    );\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n      {(isLoading)\n        ? <Loader />\n        : dataFromServer}\n      {isError && (\n        <div className=\"block\">\n          <div className=\"box table-container\">\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n","export const NotFoundPage: React.FC = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import React from 'react';\nimport {\n  HashRouter as Router, Routes, Route, Navigate,\n} from 'react-router-dom';\nimport { App } from './App';\nimport { HomePage } from './components/Pages/HomePage';\nimport { PeoplePage } from './components/Pages/PeoplePage';\nimport { NotFoundPage } from './components/Pages/NotFoundPage';\n\nexport const Root: React.FC = () => (\n  <Router>\n    <Routes>\n      <Route path=\"/\" element={<App />}>\n        <Route index element={<HomePage />} />\n        <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n\n        <Route path=\"people\">\n          <Route index element={<PeoplePage />} />\n          <Route path=\":slug\" element={<PeoplePage />} />\n        </Route>\n\n        <Route path=\"*\" element={<NotFoundPage />} />\n      </Route>\n    </Routes>\n  </Router>\n);\n","import { createRoot } from 'react-dom/client';\nimport { Root } from './Root';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Root />,\n  );\n"],"sourceRoot":""}